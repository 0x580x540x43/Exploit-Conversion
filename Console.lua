--[[
This library was made for Synapse X, Script-Ware, and Krnl. Most executors should be supported but if they are not please let me know which executor and I'll fix it.

    https://docs.script-ware.com/console-functions (Synapse)
    https://x.synapse.to/docs/reference/console.html (Script-Ware)
    https://app.archbee.io/public/PREVIEW-2Jp4SDaAD4P1COFfx1p_t/PREVIEW-87uSDAjEE49Nsks3dR_O1 (Krnl)

]]

local Executor = identifyexecutor()
if syn then Executor = "Synapse" end
if Executor ~= "Synapse" and Executor ~= "ScriptWare" and Executor ~= "Krnl" then Executor = "Other" end

local ExecutorColor = {
    ScriptWare = {
        ["black"] = "Black",
        ["red"] = "red",
        ["green"] = "green",
        ["yellow"] = "yellow",
        ["blue"] = "blue",
        ["magenta"] = "magenta",
        ["cyan"] = "cyan",
        ["white"] = "white"
    },
    Other = {
        ["black"] = "@@BLACK@@",
        ["blue"] = "@@@@BLUE@@@@",
        ["green"] = "@@GREEN@@",
        ["cyan"] = "@@CYAN@@",
        ["red"] = "@@RED@@",
        ["magenta"] = "@@MAGENTA@@",
        ["brown"] = "@@BROWN@@",
        ["light gray"] = "@@LIGHT_GRAY@@",
        ["dark gray"] = "@@DARK_GRAY@@",
        ["light blue"] = "@@LIGHT_BLUE@@",
        ["light green"] = "@@LIGHT_GREEN@@",
        ["light cyan"] = "@@LIGHT_CYAN@@",
        ["light red"] = "@@LIGHT_RED@@",
        ["light magenta"] = "@@BLACK@@",
        ["yellow"] = "@@YELLOW@@",
        ["white"] = "@@WHITE@@"
    }
}



Console = {
    Init = function()
        if Executor == "ScriptWare" then
            rconsolecreate()
        end
    end,
    Clear = function()
        rconsoleclear()
        return
    end,
    Input = function()
        return rconsoleinput()
    end,
    Title = function(Title)
        if rconsolename then
            rconsolename(Title)
        else
            rconsolesettitle(Title)
        end
    end,
    Print = function(Text, Color, Options)
        local ColorType = type(Color)
        local OptionsType = type(Options)

        if Text == nil then
            print('Missing parameter "Text" (1)')
            return
        end

        if ColorType ~= "nil" then
            if ColorType ~= "string" then
                print('Paramater "Color" (2) type is not "string", type is: ' .. type(Color))
                return
            end
        end

        if OptionsType ~= "nil" then
            if OptionsType ~= "string" then
                print('Paramater "Options" (3) type is not "string", type is: ' .. type(Options))
                return
            end

            if string.lower(Options) ~= "underline" or string.lower(Options) ~= "bold" then
                print('Parameter "Options" (3) is not equal to "underline" or "bold"')
                return 
            end
        end

        if Executor == "ScriptWare" then
            if Color == nil then
                if Options == nil then
                    rconsoleprint(Text)
                else
                    if string.lower(Options) == "underline" then
                        rconsoleprint(Text, "uwhite")
                    elseif string.lower(Options) == "bold" then
                        rconsoleprint(Text, "bwhite")
                    end
                end
            else
                local x = ExecutorColor.ScriptWare[string.lower(Color)]
                if x == nil then
                    print(string.lower(Color) .. 'is not supported by the current executor')
                    return
                end

                if Options == nil then
                    rconsoleprint(Text, x)
                else
                    if string.lower(Options) == "underline" then
                        rconsoleprint(Text, "u" .. x)
                    elseif string.lower(Options) == "bold" then
                        rconsoleprint(Text, "b" .. x)
                    end
                end
            end
        elseif Executor == "Synapse" then
            if Color == nil then
                rconsoleprint(Text)
            else
                local x = ExecutorColor.Other[string.lower(Color)]
                if x == nil then
                    print(string.lower(Color) .. 'is not supported by the current executor')
                    return
                end
                rconsoleprint(x)
                rconsoleprint(Text)
                rconsoleprint("@@WHITE@@")
            end
        else
            rconsoleprint(Text)
        end
    end,
    Info = function(Text)
        if rconsoleinfo then
            rconsoleinfo(Text)
        else
            rconsoleprint("[INFO] " .. Text)
        end
    end,
    Warn = function(Text)
        if rconsolewarn then
            rconsolewarn(Text)
        else
            rconsoleprint("[WARNING] " .. Text)
        end
    end,
    Error = function(Text)
        if rconsoleerr then
           rconsoleerr(Text)
        else
            rconsoleprint("[ERROR] " .. Text)
        end
    end,
    Destroy = function()
        if Executor ~= "ScriptWare" then
            print('Executor must be Script-Ware for this function to work')
            return
        end

        rconsoledestroy()
    end,
    NewLine = function()
        rconsoleprint("\n")
    end
}

return Console